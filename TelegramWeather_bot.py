import requests
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

TOKEN = "7300998241:AAEKarzMXoz9Sgi6f1RRpA-HoJ4-oatDgVE"
WEATHER_API_KEY = "12f1c000ced74607ac3135014251503"
user_data = {}

async def start(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω", callback_data="set_region")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω.", reply_markup=reply_markup)

async def receive_region(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    city = update.message.text
    user_data[user_id] = city

    keyboard = [
        [KeyboardButton("–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞")],
        [KeyboardButton("–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å")],
        [KeyboardButton("–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)

    await update.message.reply_text(f"–í–∞—à –≥–æ—Ä–æ–¥: {city}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–æ–≥–Ω–æ–∑–∞:", reply_markup=reply_markup)

    def get_clothing_recommendation(temp):
        if temp > 25:
            recommendation = "üëï –°–µ–≥–æ–¥–Ω—è –∂–∞—Ä–∫–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ñ—É—Ç–±–æ–ª–∫—É, —à–æ—Ä—Ç—ã –∏ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–æ–¥—É!"
        elif temp > 15:
            recommendation = "üß• –°–µ–≥–æ–¥–Ω—è —Ç–µ–ø–ª–æ. –ù–∞–¥–µ–≤–∞–π—Ç–µ –ª–µ–≥–∫—É—é –∫—É—Ä—Ç–∫—É –∏–ª–∏ –∫–æ—Ñ—Ç—É, –º–æ–∂–Ω–æ –¥–∂–∏–Ω—Å—ã."
        elif temp > 5:
            recommendation = "üß£ –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫—É—Ä—Ç–∫—É, —Å–≤–∏—Ç–µ—Ä –∏ –∑–∞–∫—Ä—ã—Ç—É—é –æ–±—É–≤—å."
        elif temp > -5:
            recommendation = "üß• –•–æ–ª–æ–¥–Ω–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—É, —à–∞–ø–∫—É –∏ –ø–µ—Ä—á–∞—Ç–∫–∏."
        else:
            recommendation = "‚ùÑ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù—É–∂–Ω–∞ —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞, –ø–µ—Ä—á–∞—Ç–∫–∏, —à–∞—Ä—Ñ –∏ –∑–∏–º–Ω—è—è –æ–±—É–≤—å."
        # if "rain" in condition or "–¥–æ–∂–¥—å" in condition:
        #     return "‚òî –ü–æ—Ö–æ–∂–µ –Ω–∞ –¥–æ–∂–¥—å. –í–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç–∏–∫ –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫!"
        # elif "snow" in condition or "—Å–Ω–µ–≥" in condition:
        #     return "‚ùÑ –ù–∞ —É–ª–∏—Ü–µ —Å–Ω–µ–≥. –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –æ–±—É–≤—å –∏ –ø–µ—Ä—á–∞—Ç–∫–∏!"
    return recommendation
def get_current_weather(city):
    url = f"http://api.weatherapi.com/v1/current.json?key={WEATHER_API_KEY}&q={city}&lang=ru"
    response = requests.get(url).json()

    if "error" in response:
        return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    temp = response["current"]["temp_c"]
    condition = response["current"]["condition"]["text"]
    recommendation = get_clothing_recommendation(temp)

    return f"üåç {city}\nüå° {temp}¬∞C\n‚òÅÔ∏è {condition}\nüëï {recommendation}"
def get_daily_forecast(city):
    url = f"http://api.weatherapi.com/v1/forecast.json?key={WEATHER_API_KEY}&q={city}&days=1&lang=ru"
    response = requests.get(url).json()

    if "error" in response:
        return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ."

    forecast = response['forecast']['forecastday'][0]['day']
    max_temp = forecast['maxtemp_c']
    min_temp = forecast['mintemp_c']
    avg_temp = forecast['avgtemp_c']
    condition = forecast['condition']['text']
    def get_clothing_recommendation(avg_temp):
        if avg_temp > 25:
            return "üëï –°–µ–≥–æ–¥–Ω—è –∂–∞—Ä–∫–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ñ—É—Ç–±–æ–ª–∫—É, —à–æ—Ä—Ç—ã –∏ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–æ–¥—É!"
        elif avg_temp > 15:
            return "üß• –°–µ–≥–æ–¥–Ω—è —Ç–µ–ø–ª–æ. –ù–∞–¥–µ–≤–∞–π—Ç–µ –ª–µ–≥–∫—É—é –∫—É—Ä—Ç–∫—É –∏–ª–∏ –∫–æ—Ñ—Ç—É, –º–æ–∂–Ω–æ –¥–∂–∏–Ω—Å—ã."
        elif avg_temp > 5:
            return "üß£ –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫—É—Ä—Ç–∫—É, —Å–≤–∏—Ç–µ—Ä –∏ –∑–∞–∫—Ä—ã—Ç—É—é –æ–±—É–≤—å."
        elif avg_temp > -5:
            return "üß• –•–æ–ª–æ–¥–Ω–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—É, —à–∞–ø–∫—É –∏ –ø–µ—Ä—á–∞—Ç–∫–∏."
        else:
            return "‚ùÑ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù—É–∂–Ω–∞ —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞, –ø–µ—Ä—á–∞—Ç–∫–∏, —à–∞—Ä—Ñ –∏ –∑–∏–º–Ω—è—è –æ–±—É–≤—å."
        # if "rain" in condition or "–¥–æ–∂–¥—å" in condition:
        #     return "‚òî –ü–æ—Ö–æ–∂–µ –Ω–∞ –¥–æ–∂–¥—å. –í–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç–∏–∫ –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫!"
        # elif "snow" in condition or "—Å–Ω–µ–≥" in condition:
        #     return "‚ùÑ –ù–∞ —É–ª–∏—Ü–µ —Å–Ω–µ–≥. –ù–∞–¥–µ–Ω—å—Ç–µ —Ç–µ–ø–ª—É—é –æ–±—É–≤—å –∏ –ø–µ—Ä—á–∞—Ç–∫–∏!"
    recommendation = get_clothing_recommendation(avg_temp, condition)
    return f"üåç –ì–æ—Ä–æ–¥: {city}üå° –ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {max_temp}¬∞C‚ùÑÔ∏è –ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {min_temp}¬∞C‚òÄÔ∏è {recommendation}"

def get_future_forecast(city, days=3):
    url = f"http://api.weatherapi.com/v1/forecast.json?key={WEATHER_API_KEY}&q={city}&days={days}&lang=ru"
    response = requests.get(url).json()

    if "error" in response:
        return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ."

    forecast = response['forecast']['forecastday'][0]['day']
    max_temp = forecast['maxtemp_c']
    min_temp = forecast['mintemp_c']
    avg_temp = forecast['avgtemp_c']
    def get_clothing_recommendation(avg_temp):
        if avg_temp > 25:
            return "üëï –°–µ–≥–æ–¥–Ω—è –∂–∞—Ä–∫–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ñ—É—Ç–±–æ–ª–∫—É, —à–æ—Ä—Ç—ã –∏ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–æ–¥—É!"
        elif avg_temp > 15:
            return "üß• –°–µ–≥–æ–¥–Ω—è —Ç–µ–ø–ª–æ. –ù–∞–¥–µ–≤–∞–π—Ç–µ –ª–µ–≥–∫—É—é –∫—É—Ä—Ç–∫—É –∏–ª–∏ –∫–æ—Ñ—Ç—É, –º–æ–∂–Ω–æ –¥–∂–∏–Ω—Å—ã."
        elif avg_temp > 5:
            return "üß£ –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∫—É—Ä—Ç–∫—É, —Å–≤–∏—Ç–µ—Ä –∏ –∑–∞–∫—Ä—ã—Ç—É—é –æ–±—É–≤—å."
        elif avg_temp > -5:
            return "üß• –•–æ–ª–æ–¥–Ω–æ! –ù–∞–¥–µ–≤–∞–π—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—É, —à–∞–ø–∫—É –∏ –ø–µ—Ä—á–∞—Ç–∫–∏."
        else:
            return "‚ùÑ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –ù—É–∂–Ω–∞ —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞, –ø–µ—Ä—á–∞—Ç–∫–∏, —à–∞—Ä—Ñ –∏ –∑–∏–º–Ω—è—è –æ–±—É–≤—å."
    recommendation = get_clothing_recommendation(avg_temp)
    return f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ {days} –¥–Ω—è –≤–ø–µ—Ä–µ–¥\nüåç –ì–æ—Ä–æ–¥: {city}\nüå° –ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {max_temp}¬∞C\n‚ùÑÔ∏è –ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {min_temp}¬∞C\n‚òÄÔ∏è –ü–æ–≥–æ–¥–∞:{recommendation}"

async def handle_text(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    text = update.message.text

    if user_id not in user_data:
        await receive_region(update, context)
    else:
        await update.message.reply_text(get_current_weather(user_data[user_id]))

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if name == "__main__":
    main()